AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Api:
    Cors:
      AllowMethods: "'OPTIONS,GET,POST,PUT,DELETE'"
      AllowHeaders: "'Content-Type,Authorization'"
      AllowOrigin: "'http://127.0.0.1:4200'"
      AllowCredentials: "'true'"
  Function:
    Timeout: 30
    Environment:
      Variables: 
        TableName : !Ref AuthTable
        UserDetailsTable: !Ref UserDetailsTable
    
Resources:
  CorsApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: "CorsApi"
      StageName: "Prod"
      Cors: 
        AllowOrigin: "'http://127.0.0.1:4200'"
        AllowMethods: "'OPTIONS,GET,POST,PUT,DELETE'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowCredentials: "'true'"
  ModulesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: sam-layer-dependencies
      Description: layer with some dependencies
      LicenseInfo: 'Available under the MIT license.'
      ContentUri: ./layers
      CompatibleRuntimes:
        - nodejs18.x
    Metadata:
      BuildMethod: nodejs18.x
  AuthTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "AuthTable"
      AttributeDefinitions:
        - AttributeName: mail
          AttributeType: S
      KeySchema:
        - AttributeName: mail
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  UserDetailsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "UserDetailsTable"
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  RegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions
      Handler: register.registerlambda
      Runtime: nodejs18.x
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AuthTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UserDetailsTable
      Layers:
        - !Ref ModulesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref CorsApi
            Path: /register
            Method: post
  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions
      Handler: login.loginlambda
      Runtime: nodejs18.x
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AuthTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UserDetailsTable
      Layers:
        - !Ref ModulesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref CorsApi
            Path: /login
            Method: post
  VerificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions
      Handler: verification.verificationlambda
      Runtime: nodejs18.x
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AuthTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UserDetailsTable
      Layers:
        - !Ref ModulesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref CorsApi
            Path: /verification
            Method: get
  allusers:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions
      Handler: hello.allusers
      Runtime: nodejs18.x
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AuthTable
      Layers:
        - !Ref ModulesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref CorsApi
            Path: /users
            Method: get
  allusersdetails:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions
      Handler: hello.alluserdetails
      Runtime: nodejs18.x
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AuthTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UserDetailsTable
      Layers:
        - !Ref ModulesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref CorsApi
            Path: /usersdetails
            Method: get
  forgetPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions
      Handler: forgetpassword.forgetpasswordlambda
      Runtime: nodejs18.x
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AuthTable
      Layers:
        - !Ref ModulesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref CorsApi
            Path: /forgetpassword
            Method: post
  LogoutFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions
      Handler: logout.LogoutLambda
      Runtime: nodejs18.x
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AuthTable
      Layers:
        - !Ref ModulesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref CorsApi
            Path: /logout
            Method: get
  userVerificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions
      Handler: userVerification.UserVerificationLambda
      Runtime: nodejs18.x
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AuthTable
      Layers:
        - !Ref ModulesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref CorsApi
            Path: /userverification
            Method: get
  CartFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions
      Handler: cart.CartLambda
      Runtime: nodejs18.x
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AuthTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UserDetailsTable
      Layers:
        - !Ref ModulesLayer
      Events:
        UpdateCart:
          Type: Api
          Properties:
            RestApiId: !Ref CorsApi
            Path: /cart
            Method: post
        GetCart:
          Type: Api
          Properties:
            RestApiId: !Ref CorsApi
            Path: /cart
            Method: get
  WishlistFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions
      Handler: wishlist.WishlistLambda
      Runtime: nodejs18.x
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AuthTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UserDetailsTable
      Layers:
        - !Ref ModulesLayer
      Events:
        UpdateCart:
          Type: Api
          Properties:
            RestApiId: !Ref CorsApi
            Path: /wishlist
            Method: post
        GetCart:
          Type: Api
          Properties:
            RestApiId: !Ref CorsApi
            Path: /wishlist
            Method: get
  OrdersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions
      Handler: orders.OrdersLambda
      Runtime: nodejs18.x
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AuthTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UserDetailsTable
      Layers:
        - !Ref ModulesLayer
      Events:
        UpdateCart:
          Type: Api
          Properties:
            RestApiId: !Ref CorsApi
            Path: /orders
            Method: post
        GetCart:
          Type: Api
          Properties:
            RestApiId: !Ref CorsApi
            Path: /orders
            Method: get
  AddressFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions
      Handler: address.AddressLambda
      Runtime: nodejs18.x
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AuthTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UserDetailsTable
      Layers:
        - !Ref ModulesLayer
      Events:
        PostAddressEvent:
          Type: Api
          Properties:
            RestApiId: !Ref CorsApi
            Path: /address
            Method: post
        GetAddressEvent:
          Type: Api
          Properties:
            RestApiId: !Ref CorsApi
            Path: /address
            Method: get
  createAuthTableFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions
      Handler: hello.hellolambda3
      Runtime: nodejs18.x
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AuthTable
      Layers:
        - !Ref ModulesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /createtable
            Method: get
  createUserDetailsTableFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions
      Handler: hello.hellolambda4
      Runtime: nodejs18.x
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserDetailsTable
      Layers:
        - !Ref ModulesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /createuserdetailstable
            Method: get

# Outputs:
#   ApiGatewayEndpoint:
#     Description: "API Gateway endpoint URL"
#     Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/custom"